use enigo::Key::{ *, self };

pub fn input_to_keycode(input: String) -> Key {
	match input.as_str() {
		"f1" => F1,
		"f2" => F2,
		"f3" => F3,
		"f4" => F4,
		"f5" => F5,
		"f6" => F6,
		"f7" => F7,
		"f8" => F8,
		"f9" => F9,
		"f10" => F10,
		"f11" => F11,
		"f12" => F12,
		"caps" => CapsLock,
		"ret" => Return,
		"home" => Home,
		"end" => End,
		"tab" => Tab,
		"esc" => Escape,
		"del" => Delete,
		"ctrl" => Control,
		"super" => Meta,
		"pgup" => PageUp,
		"pgdn" => PageDown,
		"d-arr" => DownArrow,
		"u-arr" => UpArrow,
		"l-arr" => LeftArrow,
		"r-arr" => RightArrow,
		"alt" => Alt,
		"shft" => Shift,
		"spc" => Space,
		"bks" => Backspace,
		"a" => Key::Raw(0x41),
		"b" => Key::Raw(0x42),
		"c" => Key::Raw(0x43),
		"d" => Key::Raw(0x44),
		"e" => Key::Raw(0x45),
		"f" => Key::Raw(0x46),
		"g" => Key::Raw(0x47),
		"h" => Key::Raw(0x48),
		"i" => Key::Raw(0x49),
		"j" => Key::Raw(0x4A),
		"k" => Key::Raw(0x4B),
		"l" => Key::Raw(0x4C),
		"m" => Key::Raw(0x4D),
		"n" => Key::Raw(0x4E),
		"o" => Key::Raw(0x4F),
		"p" => Key::Raw(0x50),
		"q" => Key::Raw(0x51),
		"r" => Key::Raw(0x52),
		"s" => Key::Raw(0x53),
		"t" => Key::Raw(0x54),
		"u" => Key::Raw(0x55),
		"v" => Key::Raw(0x56),
		"w" => Key::Raw(0x57),
		"x" => Key::Raw(0x58),
		"y" => Key::Raw(0x59),
		"z" => Key::Raw(0x5A),
		any => panic!("Unexpected string: {:?}. (Do not use capitals!)", any)
	}
}